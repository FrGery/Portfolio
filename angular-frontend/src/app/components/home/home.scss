@use "./header";

.hero {
  position: relative;
  height: 100vh;
  overflow: hidden;
}

.bg,
.bg-img {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  z-index: -2;
}

.scrim {
  position: absolute;
  inset: 0;
  z-index: -1;
  background: linear-gradient(
      180deg,
      rgba(106, 231, 92, 0.18),
      rgba(0, 0, 0, 0.3)
  );
}

.overlay {
  position: relative;
  z-index: 1;
  color: #fff;
  text-align: center;
  padding-top: 40vh;
  text-shadow: 0 2px 6px rgba(0, 0, 0, 0.4);
}
/* e.g., in header.scss */
.socials .icon svg {
  width: 28px; height: 28px;
  fill: #98e07a;               /* neon green */
  transition: fill .2s ease, transform .2s ease, filter .2s ease;
  filter: drop-shadow(0 0 4px rgba(152,224,122,.45));
}
.socials .icon:hover svg {
  fill: #b7ff9a;               /* brighter on hover */
  transform: scale(1.08);
  filter: drop-shadow(0 0 6px rgba(183,255,154,.55));
}
.photo {
  position: relative;
  display: flex;
  justify-content: flex-end;
}

/* 1) A self-sized frame that scales responsively */
.portrait-frame { position: relative; width: clamp(260px, 32vw, 420px); display: inline-block; }
.portrait { width: 100%; height: auto; display: block; filter: drop-shadow(0 10px 30px rgba(0,0,0,.35)); }

/* Tune these % so the overlay hugs the Mac window area */
.mac-overlay {
  position: absolute;
  left: 10%;   /* <- tweak */
  right: 8%;   /* <- tweak */
  top: 58%;    /* <- tweak */
  bottom: 10%; /* <- tweak */
  /* debug: outline: 1px dashed rgba(152,224,122,.6); */
}

/* app-code-name fills the overlay; code writes from top-left downward */
.mac-overlay app-code-name,
.mac-overlay .code-area { width: 100%; height: 100%; }
